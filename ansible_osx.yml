---
- hosts: localhost
  tasks:
    - name: Install homebrew
      include_role:
        name: geerlingguy.mac.homebrew

    - name: Make sure homebrew bin is in path
      ansible.builtin.lineinfile:
        path: /etc/paths
        state: present
        line: '/opt/homebrew/bin'
      become: true
      become_user: root

    - name: 'add custom homebrew repos'
      community.general.homebrew_tap:
        name: [
          homebrew/cask-versions,
          thoughtbot/formulae,
        ]

    - name: Install core packages via brew casks
      community.general.homebrew_cask:
        name: "{{ item }}"
      ignore_errors: yes
      with_items:
        - figma
        - google-cloud-sdk
        - slack
        - visual-studio-code
        - vlc
        - zoom
        - rectangle
        - jetbrains-toolbox

    - name: "Install homebrew packages"
      community.general.homebrew:
        name: [
          'autoconf',
          'automake',
          'coreutils',
          'curl',
          'gnu-time',
          'gpg',
          'htop',
          'imagemagick',
          'libtool',
          'libxslt',
          'libyaml',
          'mas',
          'openssl',
          'git',
          'pkg-config',
          'rbenv',
          'ruby-build',
          'rbenv-default-gems',
          'rbenv-gemset',
          'readline',
          'sqlite3',
          'tmux',
          'unzip',
          'vim',
          'yarn',
          'zlib',
          'zsh',
        ]
        state: present
        update_homebrew: yes

    - name: "Install from Mac app store"
      shell: mas install {{ item }}
      with_items:
        - 497799835 # xcode

    - name: Get the path to ZSH
      become: false
      local_action: command which zsh
      register: zsh_path

    - name: "Ensure homebrew zsh is in allowed shells"
      lineinfile:
        path: /etc/shells
        line: "{{ zsh_path.stdout }}"
      become: true

    - name: Install Oh My ZSH
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
      args:
        creates: "/Users/{{ lookup('env', 'USER') }}/.oh-my-zsh"

    - name: Set ZSH as the default shell
      shell: chsh -s $(which zsh) {{ lookup('env', 'USER') }}
      become: true

    # - name: "Create a default ZSH configuration"
    #   template:
    #     src: templates/.zshrc.j2
    #     dest: /Users/{{ lookup('env', 'USER') }}/.zshrc
    #     owner: "{{ lookup('env', 'USER') }}"
    #     force: yes

    # - name: Create a default VSCode configuration
    #   template:
    #     src: templates/vscode-settings.json.j2
    #     dest: /Users/{{ lookup('env', 'USER') }}/Library/Application Support/Code/User/settings.json
    #     owner: "{{ lookup('env', 'USER') }}"
    #     force: yes

    # - name: Create a default VSCode keuybinding configuration
    #   template:
    #     src: templates/vscode-keybindings.json.j2
    #     dest: /Users/{{ lookup('env', 'USER') }}/Library/Application Support/Code/User/keybindings.json
    #     owner: "{{ lookup('env', 'USER') }}"
    #     force: yes

    # Add something which ensures path is set here
    # - name: Install VSCode extensions
    #   shell: code --install-extension {{ item }}
    #   with_items:
    #     - apollographql.vscode-apollo
    #     - bradlc.vscode-tailwindcss
    #     - castwide.solargraph
    #     - clinyong.vscode-css-modules
    #     - eamodio.gitlens
    #     - jakebecker.elixir-ls
    #     - kaiwood.endwise
    #     - karunamurti.haml
    #     - ms-vscode-remote.vscode-remote-extensionpack
    #     - ms-vscode.vscode-typescript-tslint-plugin
    #     - msjsdiag.debugger-for-chrome
    #     - rebornix.ruby
    #     - richie5um2.vscode-sort-json
    #     - Tyriar.sort-lines
    #     - vscodevim.vim
    #     - wholroyd.jinja
    #     - wingrunr21.vscode-ruby
    #     - xabikos.javascriptsnippets
    #     - streetsidesoftware.code-spell-checker
    #     - fabiospampinato.vscode-todo-plus

    - name: Install nvm
      become: no
      shell: >
        curl -o- https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
      args:
        executable: /bin/bash
        chdir: "$HOME"
        creates: "$HOME/.nvm/nvm.sh"

    - name: Install node LTS
      become: no
      shell: >
        . {{ ansible_env.HOME }}/.nvm/nvm.sh && nvm install {{ item }}
      args:
        executable: /bin/bash
        chdir: "{{ ansible_env.HOME }}"
        creates: "{{ ansible_env.HOME }}/.nvm/versions/{{ item }}"
      loop:
        - 22

    - name: "Install Default Ruby"
      shell: |
        rbenv install 3.4.2
        rbenv global 3.4.2
        gem install bundler
        echo 'bundler' >> "$(brew --prefix rbenv)/default-gems"
        echo 'gem: --no-document' >> ~/.gemrc

    - name: Install pnpm
      shell: |
        curl -fsSL https://get.pnpm.io/install.sh | sh -

    - name: Install pnpm global packages
      shell: pnpm add --global {{ item }}
      with_items:
        - '@angular/cli'
        - typescript